// Extensible error filters

'use strict';

var includes = require('es5-ext/string/#/contains');

module.exports = exports = function () {
	var context = this, args = arguments;
	return exports.filters.every(function (filter) { return filter.callback.apply(context, args); });
};

exports.filters = [{
	name: 'googleBot',
	callback: function (data) {
		return !includes.call(data.agent, 'Googlebot/');
	}
}, {
	name: 'noAuth',
	callback: function (data) {
		return (data.errorMessage !== 'No data on authenticated user found. ' +
			'Make sure that url port matches one provided into url setting in env.js(on)');
	}
}, {
	name: 'googleApi',
	callback: function (data) {
		return (data.errorMessage !== 'google is not defined');
	}
}, {
	name: 'chrome32Null',
	callback: function (data) {
		if (!includes.call(data.agent, 'Chrome/32')) return true;
		if (data.line) return true;
		if (data.source !== 'undefined') return true;
		return (data.message !== 'TypeError: \'null\' is not an object');
	}
}, {
	name: 'ffThisUndefined',
	callback: function (data) {
		if (data.agent !== 'Mozilla/5.0 (Windows NT 6.2; rv:49.0) Gecko/20100101 Firefox/49.0') {
			return true;
		}
		if (this.req.$appName !== 'public') return true;
		return (data.errorMessage !== 'this is undefined');
	}
}];
