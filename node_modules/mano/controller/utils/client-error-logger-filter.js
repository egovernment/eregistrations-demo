// Extensible error filters

'use strict';

var includes = require('es5-ext/string/#/contains');

var varsBlackList = ['clearOverlappingSelection', 'clearSelection', 'initMultiSelection', 'jQuery'];

module.exports = exports = function () {
	var context = this, args = arguments;
	return exports.filters.every(function (filter) { return filter.callback.apply(context, args); });
};

exports.filters = [{
	name: 'googleBot',
	callback: function (data) {
		return !includes.call(data.agent, 'Googlebot/');
	}
}, {
	name: 'googleApi',
	callback: function (data) {
		return (data.errorMessage !== 'google is not defined');
	}
}, {
	name: 'publicDbUpdate',
	callback: function (data) {
		if (this.req.$appName !== 'public') return true;
		if (data.errorMessage !== 'Rejected XHR request to "/dbupdate/": Not Found') return true;
	}
}, {
	name: 'varsBlackList',
	callback: function (data) {
		if (this.req.$appName !== 'public') return true;
		return varsBlackList.every(function (name) {
			return (data.message !== 'Uncaught ReferenceError: ' + name + ' is not defined');
		});
	}
}];
